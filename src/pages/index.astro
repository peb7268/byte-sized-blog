---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE, SITE_TAGLINE } from '../consts';

const posts = (await getCollection('blog'))
	.filter((post) => !post.data.draft)
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const featuredPost = posts[0];
const recentPosts = posts.slice(1, 7); // Get posts 2-7 (up to 6 posts)
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			<p class="wip">Blog in development. WIP</p>

			{featuredPost && (
				<section class="recent-posts">
					<h2>Recent Posts</h2>

					<!-- Featured Post -->
					<article class="featured-post">
						<a href={`/blog/${featuredPost.id}/`}>
							{featuredPost.data.heroImage && (
								<Image
									width={960}
									height={480}
									src={featuredPost.data.heroImage}
									alt={featuredPost.data.title}
									class="featured-image"
								/>
							)}
							<div class="featured-content">
								<h3>{featuredPost.data.title}</h3>
								<p class="date">
									<FormattedDate date={featuredPost.data.pubDate} />
								</p>
								{featuredPost.data.description && (
									<p class="description">{featuredPost.data.description}</p>
								)}
							</div>
						</a>
					</article>

					<!-- Grid Posts -->
					{recentPosts.length > 0 && (
						<div class="posts-grid">
							{recentPosts.map((post) => (
								<article class="grid-post">
									<a href={`/blog/${post.id}/`}>
										{post.data.heroImage && (
											<Image
												width={480}
												height={240}
												src={post.data.heroImage}
												alt={post.data.title}
												class="grid-image"
											/>
										)}
										<h4>{post.data.title}</h4>
										<p class="date">
											<FormattedDate date={post.data.pubDate} />
										</p>
									</a>
								</article>
							))}
						</div>
					)}

					<div class="cta">
						<a href="/blog" class="cta-button">â†’ Browse All Posts</a>
					</div>
				</section>
			)}

			<section class="meta">
				<p>
					<em>Writing in public, building in the open.</em><br />
					Posts written in Obsidian, published with Astro.
				</p>
			</section>
		</main>
		<Footer />
	</body>
</html>
<style>
	main {
		max-width: 65ch;
		margin: 0 auto;
		padding: 2rem 1rem;
	}

	.wip {
		text-align: center;
		color: rgb(var(--gray));
		font-size: 1rem;
		margin-bottom: 3rem;
	}

	.meta {
		text-align: center;
		margin-top: 4rem;
		padding-top: 2rem;
		border-top: 1px solid rgba(var(--gray-light), 0.25);
		color: var(--gray);
		font-style: italic;
	}

	/* Recent Posts Section */
	.recent-posts {
		max-width: 960px;
		margin: 4rem auto;
		padding: 0 1rem;
	}

	.recent-posts h2 {
		text-align: center;
		margin-bottom: 2rem;
		font-size: 2rem;
	}

	/* Featured Post */
	.featured-post {
		margin-bottom: 3rem;
	}

	.featured-post a {
		display: block;
		text-decoration: none;
		color: inherit;
		transition: transform 0.2s;
	}

	.featured-post a:hover {
		transform: translateY(-2px);
	}

	.featured-image {
		width: 100%;
		border-radius: 12px;
		margin-bottom: 1rem;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
	}

	.featured-post a:hover .featured-image {
		box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);
	}

	.featured-content {
		text-align: center;
		max-width: 65ch;
		margin: 0 auto;
	}

	.featured-content h3 {
		font-size: 2rem;
		margin: 1rem 0 0.5rem;
		color: rgb(var(--black));
		line-height: 1.2;
	}

	.featured-post a:hover h3 {
		color: rgb(var(--accent));
	}

	.featured-content .description {
		color: rgb(var(--gray));
		font-size: 1.125rem;
		line-height: 1.6;
		margin-top: 1rem;
	}

	/* Posts Grid */
	.posts-grid {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: 2rem;
		margin-bottom: 2rem;
	}

	.grid-post a {
		display: block;
		text-decoration: none;
		color: inherit;
		transition: transform 0.2s;
	}

	.grid-post a:hover {
		transform: translateY(-2px);
	}

	.grid-image {
		width: 100%;
		border-radius: 8px;
		margin-bottom: 0.75rem;
	}

	.grid-post a:hover .grid-image {
		box-shadow: var(--box-shadow);
	}

	.grid-post h4 {
		font-size: 1.25rem;
		margin: 0.5rem 0;
		color: rgb(var(--black));
		line-height: 1.3;
	}

	.grid-post a:hover h4 {
		color: rgb(var(--accent));
	}

	.date {
		margin: 0.25rem 0;
		color: rgb(var(--gray));
		font-size: 0.9rem;
	}

	/* CTA Button */
	.cta {
		display: flex;
		justify-content: center;
		margin-top: 3rem;
	}

	.cta-button {
		display: inline-block;
		padding: 0.75rem 2rem;
		background: var(--accent);
		color: white;
		text-decoration: none;
		border-radius: 0.25rem;
		font-weight: 500;
		font-size: 1.125rem;
		transition: background 0.2s;
	}

	.cta-button:hover {
		background: var(--accent-dark);
	}

	@media (max-width: 960px) {
		.posts-grid {
			grid-template-columns: repeat(2, 1fr);
			gap: 1.5rem;
		}
	}

	@media (max-width: 720px) {
		.hero h1 {
			font-size: 2rem;
		}

		.cta {
			flex-direction: column;
			align-items: stretch;
		}

		.posts-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}

		.featured-content h3 {
			font-size: 1.5rem;
		}
	}
</style>
